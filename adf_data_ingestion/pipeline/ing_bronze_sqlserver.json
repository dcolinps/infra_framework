{
	"name": "ing_bronze_sqlserver",
	"properties": {
		"activities": [
			{
				"name": "Delete Parquet files if already exists",
				"type": "Delete",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Ds_BronzeParquet",
						"type": "DatasetReference",
						"parameters": {
							"bronze_path": {
								"value": "@pipeline().parameters.file_path",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"wildcardFileName": "*"
					}
				}
			},
			{
				"name": "Switch based on Load Type and Split By",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "Delete Parquet files if already exists",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@concat(pipeline().parameters.load_type, ' - no splitby ',\nstring(empty(pipeline().parameters.split_by_col))\n)",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "F - no splitby True",
							"activities": [
								{
									"name": "Copy data - sqlserver Full Load No Split By",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@pipeline().parameters.select_stmt",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"isolationLevel": "ReadCommitted",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 10,
												"blockSizeInMB": 20
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": 32,
										"enableSkipIncompatibleRow": false,
										"dataIntegrationUnits": 32
									},
									"inputs": [
										{
											"referenceName": "Ds_SqlServerTable",
											"type": "DatasetReference",
											"parameters": {
												"secret_name": {
													"value": "@pipeline().parameters.conn_vault_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Ds_BronzeParquet",
											"type": "DatasetReference",
											"parameters": {
												"bronze_path": {
													"value": "@pipeline().parameters.file_path",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Bronze Status in OBJ_RUN_STATS",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data - sqlserver Full Load No Split By",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@{pipeline().globalParameters.abc_db_schema}.[SET_OBJ_RUN_STATS]",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"JOB_RUN_ID": {
												"value": {
													"value": "@pipeline().parameters.job_run_id",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJ_ID": {
												"value": {
													"value": "@pipeline().parameters.obj_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"OBJ_RUN_ID": {
												"value": {
													"value": "@pipeline().parameters.obj_run_id",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJ_STATUS": {
												"value": "BRONZE_SUCCESS",
												"type": "String"
											},
											"OPERATION_TYPE": {
												"value": "UPDATE",
												"type": "String"
											},
											"PIPELINE_RUN_ID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCE_COUNT": {
												"value": {
													"value": "@activity('Copy data - sqlserver Full Load No Split By').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"SRC_NAME": {
												"value": {
													"value": "@pipeline().parameters.src_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"SRC_PATH": {
												"value": null,
												"type": "String"
											},
											"SRC_SCHEMA_ID": {
												"value": {
													"value": "@pipeline().parameters.src_schema_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TARGET_COUNT": {
												"value": {
													"value": "@activity('Copy data - sqlserver Full Load No Split By').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"TGT_PATH": {
												"value": {
													"value": "@pipeline().parameters.file_path",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Ls_AzureSqlDb",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "F - no splitby False",
							"activities": [
								{
									"name": "Lookup Source Object",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('select min(',\npipeline().parameters.split_by_col,\n') as min_value, max(',\npipeline().parameters.split_by_col,\n') as max_value  from ',\npipeline().parameters.schema_name,\n'.',\npipeline().parameters.obj_name\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Ds_SqlServerTable",
											"type": "DatasetReference",
											"parameters": {
												"secret_name": {
													"value": "@pipeline().parameters.conn_vault_name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Copy data - sqlserver Full Load Split By",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup Source Object",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat(pipeline().parameters.select_stmt,' and ?AdfDynamicRangePartitionCondition')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"isolationLevel": "ReadCommitted",
											"partitionOption": "DynamicRange",
											"partitionSettings": {
												"partitionColumnName": {
													"value": "@{pipeline().parameters.split_by_col}",
													"type": "Expression"
												},
												"partitionUpperBound": {
													"value": "@{activity('Lookup Source Object').output.firstRow.max_value}",
													"type": "Expression"
												},
												"partitionLowerBound": {
													"value": "@{activity('Lookup Source Object').output.firstRow.min_value}",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 10,
												"blockSizeInMB": 20
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": {
											"value": "@int(pipeline().parameters.mappers)",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": false,
										"dataIntegrationUnits": 32,
										"jobPartitions": 2,
										"maxMemoryLimit": 21474836480
									},
									"inputs": [
										{
											"referenceName": "Ds_SqlServerTable",
											"type": "DatasetReference",
											"parameters": {
												"secret_name": {
													"value": "@pipeline().parameters.conn_vault_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Ds_BronzeParquet",
											"type": "DatasetReference",
											"parameters": {
												"bronze_path": {
													"value": "@pipeline().parameters.file_path",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Bronze Status in OBJ_RUN_STATS 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data - sqlserver Full Load Split By",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@{pipeline().globalParameters.abc_db_schema}.[SET_OBJ_RUN_STATS]",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"JOB_RUN_ID": {
												"value": {
													"value": "@pipeline().parameters.job_run_id",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJ_ID": {
												"value": {
													"value": "@pipeline().parameters.obj_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"OBJ_RUN_ID": {
												"value": {
													"value": "@pipeline().parameters.obj_run_id",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJ_STATUS": {
												"value": "BRONZE_SUCCESS",
												"type": "String"
											},
											"OPERATION_TYPE": {
												"value": "UPDATE",
												"type": "String"
											},
											"PIPELINE_RUN_ID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCE_COUNT": {
												"value": {
													"value": "@activity('Copy data - sqlserver Full Load Split By').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"SRC_NAME": {
												"value": {
													"value": "@pipeline().parameters.src_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"SRC_PATH": {
												"value": null,
												"type": "String"
											},
											"SRC_SCHEMA_ID": {
												"value": {
													"value": "@pipeline().parameters.src_schema_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TARGET_COUNT": {
												"value": {
													"value": "@activity('Copy data - sqlserver Full Load Split By').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"TGT_PATH": {
												"value": {
													"value": "@pipeline().parameters.file_path",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Ls_AzureSqlDb",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "I - no splitby True",
							"activities": [
								{
									"name": "Copy data - sqlserver Incr Load No Split By",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@pipeline().parameters.select_stmt",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"isolationLevel": "ReadCommitted",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 10,
												"blockSizeInMB": 20
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": 32,
										"enableSkipIncompatibleRow": false,
										"dataIntegrationUnits": 32
									},
									"inputs": [
										{
											"referenceName": "Ds_SqlServerTable",
											"type": "DatasetReference",
											"parameters": {
												"secret_name": {
													"value": "@pipeline().parameters.conn_vault_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Ds_BronzeParquet",
											"type": "DatasetReference",
											"parameters": {
												"bronze_path": {
													"value": "@pipeline().parameters.file_path",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Bronze Status in OBJ_RUN_STATS 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data - sqlserver Incr Load No Split By",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@{pipeline().globalParameters.abc_db_schema}.[SET_OBJ_RUN_STATS]",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"JOB_RUN_ID": {
												"value": {
													"value": "@pipeline().parameters.job_run_id",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJ_ID": {
												"value": {
													"value": "@pipeline().parameters.obj_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"OBJ_RUN_ID": {
												"value": {
													"value": "@pipeline().parameters.obj_run_id",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJ_STATUS": {
												"value": "BRONZE_SUCCESS",
												"type": "String"
											},
											"OPERATION_TYPE": {
												"value": "UPDATE",
												"type": "String"
											},
											"PIPELINE_RUN_ID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCE_COUNT": {
												"value": {
													"value": "@activity('Copy data - sqlserver Incr Load No Split By').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"SRC_NAME": {
												"value": {
													"value": "@pipeline().parameters.src_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"SRC_PATH": {
												"value": null,
												"type": "String"
											},
											"SRC_SCHEMA_ID": {
												"value": {
													"value": "@pipeline().parameters.src_schema_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TARGET_COUNT": {
												"value": {
													"value": "@activity('Copy data - sqlserver Incr Load No Split By').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"TGT_PATH": {
												"value": {
													"value": "@pipeline().parameters.file_path",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Ls_AzureSqlDb",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "I - no splitby False",
							"activities": [
								{
									"name": "Lookup Source Object 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('select coalesce(min(',\npipeline().parameters.split_by_col,\n'),0) as min_value, coalesce(max(',\npipeline().parameters.split_by_col,\n'),0) as max_value from (',\npipeline().parameters.select_stmt,\n') aa'\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Ds_SqlServerTable",
											"type": "DatasetReference",
											"parameters": {
												"secret_name": {
													"value": "@pipeline().parameters.conn_vault_name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Copy data - sqlserver Incr Load Split By",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup Source Object 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat(pipeline().parameters.select_stmt,' and ?AdfDynamicRangePartitionCondition')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"isolationLevel": "ReadCommitted",
											"partitionOption": "DynamicRange",
											"partitionSettings": {
												"partitionColumnName": {
													"value": "@{pipeline().parameters.split_by_col}",
													"type": "Expression"
												},
												"partitionUpperBound": {
													"value": "@{activity('Lookup Source Object 2').output.firstRow.max_value}",
													"type": "Expression"
												},
												"partitionLowerBound": {
													"value": "@{activity('Lookup Source Object 2').output.firstRow.min_value}",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 10,
												"blockSizeInMB": 20
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": {
											"value": "@int(pipeline().parameters.mappers)",
											"type": "Expression"
										},
										"enableSkipIncompatibleRow": false,
										"dataIntegrationUnits": 32,
										"jobPartitions": 2,
										"maxMemoryLimit": 21474836480
									},
									"inputs": [
										{
											"referenceName": "Ds_SqlServerTable",
											"type": "DatasetReference",
											"parameters": {
												"secret_name": {
													"value": "@pipeline().parameters.conn_vault_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Ds_BronzeParquet",
											"type": "DatasetReference",
											"parameters": {
												"bronze_path": {
													"value": "@pipeline().parameters.file_path",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Bronze Status in OBJ_RUN_STATS 2_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data - sqlserver Incr Load Split By",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@{pipeline().globalParameters.abc_db_schema}.[SET_OBJ_RUN_STATS]",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"JOB_RUN_ID": {
												"value": {
													"value": "@pipeline().parameters.job_run_id",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJ_ID": {
												"value": {
													"value": "@pipeline().parameters.obj_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"OBJ_RUN_ID": {
												"value": {
													"value": "@pipeline().parameters.obj_run_id",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJ_STATUS": {
												"value": "BRONZE_SUCCESS",
												"type": "String"
											},
											"OPERATION_TYPE": {
												"value": "UPDATE",
												"type": "String"
											},
											"PIPELINE_RUN_ID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SOURCE_COUNT": {
												"value": {
													"value": "@activity('Copy data - sqlserver Incr Load Split By').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"SRC_NAME": {
												"value": {
													"value": "@pipeline().parameters.src_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"SRC_PATH": {
												"value": null,
												"type": "String"
											},
											"SRC_SCHEMA_ID": {
												"value": {
													"value": "@pipeline().parameters.src_schema_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TARGET_COUNT": {
												"value": {
													"value": "@activity('Copy data - sqlserver Incr Load Split By').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"TGT_PATH": {
												"value": {
													"value": "@pipeline().parameters.file_path",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Ls_AzureSqlDb",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"schema_name": {
				"type": "string"
			},
			"obj_name": {
				"type": "string"
			},
			"select_stmt": {
				"type": "string"
			},
			"split_by_col": {
				"type": "string"
			},
			"conn_vault_name": {
				"type": "string"
			},
			"file_path": {
				"type": "string"
			},
			"load_type": {
				"type": "string"
			},
			"mappers": {
				"type": "string"
			},
			"obj_id": {
				"type": "string"
			},
			"obj_run_id": {
				"type": "string"
			},
			"job_run_id": {
				"type": "string"
			},
			"src_name": {
				"type": "string"
			},
			"src_schema_id": {
				"type": "string"
			}
		},
		"variables": {
			"ErrorCatch": {
				"type": "String"
			}
		},
		"folder": {
			"name": "00_Ingestion_Framework/01_ingestion"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}